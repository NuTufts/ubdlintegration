#include "dlprod_fclbase_producers.fcl"
#include "dlprod_fclbase_analyzers.fcl"
#include "time_memory_tracker_microboone.fcl"

BEGIN_PROLOG

DLInterface: {
  module_type:         "DLInterface"
  Verbosity:           0
  WireProducerName:    "butcher"
  OutputProducerName:  "ssnet"
  larliteOutputFile:   "larlite_larflow.root"

  SuperaConfigFile:    "supera_ssnetinterface.fcl"
  PixelThresholdsForSavedScoresPerPlane: [10.0,10.0,10.0]
  DoWholeImageCrop:    true
  DoFlashROICrop:      true
  OpFlashProducerName: "simpleFlashBeam"
  SSNetCropMethod:     "FlashCROI"
  UBCropConfig:        "ubcrop.cfg"
  SaveDetsplitImagesInput:     false
  SaveNetOutSplitImagesOutput: false

  SSNetMode:           "DoNotRun"
  LArFlowMode:         "DoNotRun"
  InfillMode:          "PyTorchCPU"
  CosmicMRCNNMode:     "PyTorchCPU"
  SparseSSNetMode:     "PyTorchCPU"

  ServerConfiguration: {
    BrokerAddress: "tcp://nudot.lns.mit.edu"
    BrokerPort: "6000"
    RequestTimeoutSecs: 300
    RequestMaxTries: 3
    MaxBrokerReconnects: 3
  }
    
  MCC8SSNetScript: ["mcc8_caffe_ubssnet_plane0.pytorchscript",
                    "mcc8_caffe_ubssnet_plane1.pytorchscript",
                    "mcc8_caffe_ubssnet_plane2.pytorchscript"]

  CosmicMRCNN_WeightFiles: ["mcc8_mrcnn_plane0_weightsonly.pt",
                            "mcc8_mrcnn_plane1_weightsonly.pt",
                            "mcc8_mrcnn_plane2_weightsonly.pt"]

  CosmicMRCNN_ConfigFiles: ["mills_config_0.yaml",
                            "mills_config_1.yaml",
                            "mills_config_2.yaml"]

  SparseInfill_WeightFiles: ["sparseinfill_uplane_test.tar",
                             "sparseinfill_vplane_test.tar",
                             "sparseinfill_yplane_test.tar"]
  SparseInfillOnlyCROI: true
  InfillCropConfig:     "infill_split.cfg"

  SparseSSNet_WeightFiles: ["sparse_uresnet_v0_plane0_weights-13999.ckpt",
                            "sparse_uresnet_v0_plane1_weights-17999.ckpt",
                            "sparse_uresnet_v0_plane2_weights-26999.ckpt"]


}

UBDLIntegration: @local::DLInterface

END_PROLOG

process_name: DLDeploy

services:
{
  #scheduler:    { defaultExceptions: false }
  #TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  #message:                 @local::microboone_message_services_prod_debug
  #FileCatalogMetadata:     @local::art_file_catalog_mc
  #@table::microboone_services
  @table::microboone_services_reco
  TFileService: { fileName: "mc_hist.root" }  
}

#services.TimeTracker.printSummary: false
#services.TimeTracker.dbOutput: {}
#services.MemoryTracker.printSummaries: []
#services.MemoryTracker.includeMallocInfo: false
services.DetectorPropertiesService.NumberTimeSamples: 6400
services.DetectorPropertiesService.ReadOutWindowSize: 6400
services.DetectorClocksService.InheritClockConfig:    false
services.DetectorClocksService.TriggerOffsetTPC:      -0.400e3
services.SpaceCharge.EnableSimSpatialSCE: true
services.SpaceCharge.EnableSimEfieldSCE:  true

#services.FileCatalogMetadata.applicationVersion: "develop"
#services.FileCatalogMetadata.fileType: "mc"
#services.FileCatalogMetadata.runType: "physics"
#services.FileCatalogMetadataMicroBooNE: {
#  FCLName: "run_larlite_maker_mc.fcl"
#  FCLVersion: "develop"
#  ProjectName: "LiteMC"
#  ProjectStage: "LiteMaker"
#  ProjectVersion: "develop"
#}


source_gen:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10          # Number of events to create
  firstRun:    1        # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

source_reprocess:
{
  module_type: RootInput
  maxEvents:   100000     # Number of events to create
}

physics:
{
 producers: {
   @table::dlprod_producers
   ubdl: @local::UBDLIntegration   
 }

 filters: {}

 analyzers: {}

 dlnetpath: [ubdl]
 stream: [out1]
 end_paths: [stream]
 trigger_paths: [ dlnetpath ]
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "out_larsoft.root" #default file name, can override from command line with -o or --output
   dataTier:    "larcv"
   compressionLevel: 1
 }
}

